# Generated by Django 5.1.5 on 2025-07-06 00:27

import apps.veiculos.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alugueis', '0001_initial'),
        ('usuarios', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da cor', max_length=50, unique=True, verbose_name='Nome')),
                ('codigo_hex', models.CharField(blank=True, help_text='Código hexadecimal da cor (ex: #FF0000)', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Formato inválido. Use #RRGGBB')], verbose_name='Código Hex')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Cor',
                'verbose_name_plural': 'Cores',
                'db_table': 'cor',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da marca', max_length=100, unique=True, verbose_name='Nome')),
                ('pais_origem', models.CharField(blank=True, help_text='País onde a marca foi fundada', max_length=50, verbose_name='País de Origem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marcas',
                'db_table': 'marcas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Opcional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do opcional', max_length=100, unique=True, verbose_name='Nome')),
                ('categoria', models.CharField(blank=True, help_text='Categoria do opcional (ex: Segurança, Conforto, Tecnologia)', max_length=50, verbose_name='Categoria')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do opcional', verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Opcional',
                'verbose_name_plural': 'Opcionais',
                'db_table': 'opcional',
                'ordering': ['categoria', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Carro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_fabricacao', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2026)], verbose_name='Ano de Fabricação')),
                ('ano_modelo', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2027)], verbose_name='Ano do Modelo')),
                ('condicao', models.CharField(choices=[('novo', 'Novo'), ('usado', 'Usado')], help_text='Condição do veículo', max_length=10, verbose_name='Condição')),
                ('preco_venda', models.DecimalField(blank=True, decimal_places=2, help_text='Preço de venda em Kwanza', max_digits=12, null=True, verbose_name='Preço de Venda (Kz)')),
                ('preco_aluguel_diario', models.DecimalField(blank=True, decimal_places=2, help_text='Preço de aluguel por dia em Kwanza', max_digits=8, null=True, verbose_name='Preço Aluguel Diário (Kz)')),
                ('quilometragem', models.PositiveIntegerField(default=0, help_text='Quilometragem atual do veículo', verbose_name='Quilometragem')),
                ('combustivel', models.CharField(choices=[('gasolina', 'Gasolina'), ('etanol', 'Etanol'), ('flex', 'Flex'), ('diesel', 'Diesel'), ('eletrico', 'Elétrico'), ('hibrido', 'Híbrido')], max_length=20, verbose_name='Combustível')),
                ('transmissao', models.CharField(choices=[('manual', 'Manual'), ('automatico', 'Automático'), ('cvt', 'CVT'), ('automatizado', 'Automatizado')], max_length=20, verbose_name='Transmissão')),
                ('motor', models.CharField(blank=True, help_text='Especificação do motor (ex: 1.0, 1.6, 2.0)', max_length=20, verbose_name='Motor')),
                ('numero_portas', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(5)], verbose_name='Número de Portas')),
                ('chassi', models.CharField(blank=True, help_text='Número do chassi (17 dígitos)', max_length=17, unique=True, verbose_name='Chassi')),
                ('matricula', models.CharField(blank=True, help_text='Matrícula do veículo em Angola', max_length=15, unique=True, verbose_name='Matrícula')),
                ('documento_unico', models.CharField(blank=True, help_text='Número do Documento Único Automóvel', max_length=20, verbose_name='Documento Único')),
                ('disponivel_venda', models.BooleanField(default=True, verbose_name='Disponível para Venda')),
                ('disponivel_aluguel', models.BooleanField(default=True, verbose_name='Disponível para Aluguel')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do veículo', verbose_name='Descrição')),
                ('observacoes', models.TextField(blank=True, help_text='Observações internas', verbose_name='Observações')),
                ('data_entrada', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('cor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carros', to='veiculos.cor', verbose_name='Cor')),
            ],
            options={
                'verbose_name': 'Carro',
                'verbose_name_plural': 'Carros',
                'db_table': 'carros',
                'ordering': ['-data_entrada'],
            },
        ),
        migrations.CreateModel(
            name='FotoCarro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(help_text='Foto do veículo', upload_to=apps.veiculos.models.carro_foto_path, verbose_name='Foto')),
                ('descricao', models.CharField(blank=True, help_text='Descrição da foto', max_length=200, verbose_name='Descrição')),
                ('ordem', models.PositiveSmallIntegerField(default=1, help_text='Ordem de exibição da foto', verbose_name='Ordem')),
                ('foto_principal', models.BooleanField(default=False, help_text='Marcar como foto principal', verbose_name='Foto Principal')),
                ('data_upload', models.DateTimeField(auto_now_add=True, verbose_name='Data de Upload')),
                ('carro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos', to='veiculos.carro', verbose_name='Carro')),
            ],
            options={
                'verbose_name': 'Foto do Carro',
                'verbose_name_plural': 'Fotos dos Carros',
                'db_table': 'foto_carro',
                'ordering': ['ordem', 'data_upload'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoStatusCarro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, help_text='Status anterior do carro', max_length=50, null=True, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(blank=True, help_text='Novo status do carro', max_length=50, null=True, verbose_name='Status Novo')),
                ('motivo', models.TextField(blank=True, help_text='Motivo da mudança de status', null=True, verbose_name='Motivo')),
                ('data_alteracao', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora da alteração do status', verbose_name='Data da Alteração')),
                ('carro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_status', to='veiculos.carro', verbose_name='Carro')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.funcionario', verbose_name='Funcionário Responsável')),
            ],
            options={
                'verbose_name': 'Histórico de Status do Carro',
                'verbose_name_plural': 'Históricos de Status dos Carros',
                'db_table': 'historico_status_carros',
                'ordering': ['-data_alteracao'],
            },
        ),
        migrations.CreateModel(
            name='Manutencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_manutencao', models.CharField(choices=[('preventiva', 'Preventiva'), ('corretiva', 'Corretiva'), ('revisao', 'Revisão')], max_length=20, verbose_name='Tipo de Manutenção')),
                ('descricao', models.TextField(help_text='Descrição detalhada da manutenção', verbose_name='Descrição')),
                ('valor', models.DecimalField(blank=True, decimal_places=2, help_text='Valor da manutenção em Kwanza', max_digits=8, null=True, verbose_name='Valor (Kz)')),
                ('quilometragem', models.PositiveIntegerField(blank=True, help_text='Quilometragem no momento da manutenção', null=True, verbose_name='Quilometragem')),
                ('oficina', models.CharField(blank=True, help_text='Nome da oficina onde foi realizada', max_length=200, verbose_name='Oficina')),
                ('data_manutencao', models.DateField(help_text='Data em que a manutenção foi realizada', verbose_name='Data da Manutenção')),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora do cadastro no sistema', verbose_name='Data de Cadastro')),
                ('carro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manutencoes', to='veiculos.carro', verbose_name='Carro')),
            ],
            options={
                'verbose_name': 'Manutenção',
                'verbose_name_plural': 'Manutenções',
                'db_table': 'manutencoes',
                'ordering': ['-data_manutencao', '-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='Modelo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do modelo', max_length=100, verbose_name='Nome')),
                ('categoria', models.CharField(choices=[('sedan', 'Sedan'), ('hatch', 'Hatch'), ('suv', 'SUV'), ('pickup', 'Pickup'), ('coupe', 'Coupé'), ('conversivel', 'Conversível'), ('minivan', 'Minivan'), ('outro', 'Outro')], help_text='Categoria do veículo', max_length=20, verbose_name='Categoria')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('marca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modelos', to='veiculos.marca', verbose_name='Marca')),
            ],
            options={
                'verbose_name': 'Modelo',
                'verbose_name_plural': 'Modelos',
                'db_table': 'modelos',
                'ordering': ['marca__nome', 'nome'],
            },
        ),
        migrations.AddField(
            model_name='carro',
            name='modelo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carros', to='veiculos.modelo', verbose_name='Modelo'),
        ),
        migrations.CreateModel(
            name='MovimentacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_movimentacao', models.CharField(choices=[('entrada', 'Entrada'), ('saida_venda', 'Saída - Venda'), ('saida_aluguel', 'Saída - Aluguel'), ('retorno_aluguel', 'Retorno - Aluguel'), ('transferencia', 'Transferência'), ('baixa', 'Baixa')], max_length=20, verbose_name='Tipo de Movimentação')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a movimentação', verbose_name='Observações')),
                ('data_movimentacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Movimentação')),
                ('aluguel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='alugueis.aluguel', verbose_name='Aluguel Relacionado')),
                ('carro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacoes', to='veiculos.carro', verbose_name='Carro')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.funcionario', verbose_name='Funcionário Responsável')),
            ],
            options={
                'verbose_name': 'Movimentação de Estoque',
                'verbose_name_plural': 'Movimentações de Estoque',
                'db_table': 'movimentacao_estoque',
                'ordering': ['-data_movimentacao'],
            },
        ),
    ]

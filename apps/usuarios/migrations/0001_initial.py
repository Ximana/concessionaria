# Generated by Django 5.1.5 on 2025-07-06 00:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('admin', 'Administrador'), ('funcionario', 'Funcionário'), ('cliente', 'Cliente'), ('gerente', 'Gerente')], default='cliente', help_text='Tipo de usuário no sistema', max_length=20, verbose_name='Tipo de Usuário')),
                ('telefone', models.CharField(blank=True, help_text='Número de telefone para contato', max_length=20, verbose_name='Telefone')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_pessoa', models.CharField(choices=[('fisica', 'Pessoa Física'), ('juridica', 'Pessoa Jurídica')], default='fisica', max_length=10, verbose_name='Tipo de Pessoa')),
                ('nome', models.CharField(help_text='Nome completo ou razão social', max_length=200, verbose_name='Nome/Razão Social')),
                ('bilhete_identidade', models.CharField(blank=True, help_text='Número do Bilhete de Identidade', max_length=20, unique=True, verbose_name='Bilhete de Identidade')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=20, verbose_name='Celular')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('endereco', models.TextField(blank=True, verbose_name='Endereço')),
                ('profissao', models.CharField(blank=True, max_length=100, verbose_name='Profissão')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do funcionário', max_length=200, verbose_name='Nome Completo')),
                ('bilhete_identidade', models.CharField(help_text='Número do Bilhete de Identidade', max_length=20, unique=True, verbose_name='Bilhete de Identidade')),
                ('cargo', models.CharField(blank=True, help_text='Cargo do funcionário', max_length=100, verbose_name='Cargo')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('comissao_venda', models.DecimalField(decimal_places=2, default=0, help_text='Percentual de comissão sobre vendas', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Comissão de Venda (%)')),
                ('data_admissao', models.DateField(blank=True, null=True, verbose_name='Data de Admissão')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='funcionario_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'db_table': 'funcionarios',
                'ordering': ['nome'],
            },
        ),
    ]
